#
# Copyright 2020 Association for the promotion of open-source insurance software and for the establishment of open interface standards in the insurance industry (Verein zur Foerderung quelloffener Versicherungssoftware und Etablierung offener Schnittstellenstandards in der Versicherungsbranche)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Default message properties
# Format of the message properties: {className/model}.{contentType}.{context}
# Each part should be camelCase (starting with lower case):
# - className: class name or model using the label 
# - contentType: title, message, label; if it is a MessageFormat string, followed by "format"
# - context: the context of the message (e.g., dialog, common, ui-component, etc)
#            "common" if may be used in several places (e.g., model labels)

# dialog labels
quitHandler.titleFormat.dialog = Quit {0}
quitHandler.message.dialog = Do you want to exit?
aboutHandler.titleFormat.dialog = About {0}
aboutHandler.messageFormat.dialog = {0}\n\n  Version: {1}\n  Build: {2} \n\nCopyright (c) {3}\n\nThis product includes software developed by other open source projects.
mergeConflictDialog.titleFormat.dialog = Conflicts {0}
mergeConflictDialog.messageFormat.dialog = There are merge conflicts in {0}.\nPlease resolve this conflicts (with a tool of your choice) and the press ''{1}'' to proceed, or press ''{2}'' to cancel the merge and revert changes.
mergeConflictDialog.label.continueButton = Continue
mergeConflictDialog.label.abortButton = Abort
commandsRunnable.messageFormat.progressMonitorStart = Starting running {0} commands
commandsRunnable.messageFormat.progressMonitorUpdate = Commands: {0} running, {1} finished
commandsRunnable.message.cancelled = Cancelled
commandsRunnable.message.noFailure = Without failure
cliProgressMonitorDialog.label.detailsButton = Show errors
commandProgressDialog.message.successDialog = Completed without errors
commandProgressDialog.messageFormat.statusWithErrors = {0} finished with errors

# hanlder labels
refreshSessionHandler.message.progressMonitorStart = Refreshing session

# lifecycle labels
sessionInitializer.message.progressMonitorStart = Initializing session
sessionInitializer.message.progressMonitorLoadSession = Loading session
sessionInitializer.message.progressMonitorLoadPrefs = Loading preferences
sessionInitializer.message.progressMonitorLoadConfig = Loading configuration
sessionInitializer.title.openQuestionDialog = Initializing git-configuration
sessionInitializer.messageFormat.checkoutDifferentBranchQuestionDialog = Current Configuration branch is: {0}.\n\nUpdate will switch to: {1} branch.\nThis will remove any customized configuration!\nDo you want to proceed?
sessionInitializer.messageFormat.pullFailsProceedQuestionDialog = Pull configuration branch {0} failed.\n\nWould you like to proceed anyway?\nNote that an outdated/invalid configuration might be used if not.\nIt is recommended to delete/update manually the configuration folder in this case to pick the latest configuration!

# model common labels
repository.label.common = Repository
project.label.common = Project
environment.label.common = Environment
featureBranch.label.common = Feature Branch
featureBranchProvider.label.common = Feature Branch Provider

# workflow common labels
workflowRequiresClone.label.common = Requires Clone
workflowCloneRepositories.label.common = Clone
workflowSynchronizeAllEnvBranches.label.common = Pull/Fetch (Env Branches)
workflowRequiresWorktreeSetup.label.common = Requires Worktree Setup
workflowSetupWorktree.label.common = Create Worktree
workflowRemoveWorktree.label.common = Remove Worktree
workflowRemoveWorktree.warningMessageFormat.common = Are you sure that you would like to remove the environment ''{0} {1}'''?\n\nThis process cannot be reverted!
workflowFetchAndCheckoutFeatureBranch.label.common = Fetch && Checkout
workflowMergeBaseIntoFeatureBranch.label.common = Fetch && Merge (Base)
workflowPullFeatureBranch.label.common = Pull
workflowCleanWorktree.label.common = Clean/Restore Worktree
workflowCleanWorktree.warningMessageFormat.common = Are you sure that you would like to clean/restore the ''{0} {1}'' worktree?\n\nThis process cannot be reverted and changes might be lost!
workflowRemoveFeatureBranch.label.common = Remove Branch
workflowRemoveFeatureBranch.warningMessageFormat.common = Are you sure that you would like to remove the local feature branch ''{0}''?\n\Note that this process does NOT remove the branch remotely.\n\nThis process cannot be reverted!

# LocalRepoStatus labels (unrelated with workflow)
localRepoStatusPlaceholder.label.uiString = ...
localRepoStatusNotAvailable.label.uiString = NA
localRepoStatusReady.label.uiString = Ready
localRepoStatusRequiresClone.label.uiString = Requires Clone
localRepoStatusRequiresWorktree.label.uiString = Requires Worktree Setup
localRepoStatusRequiresWorktreeRemoval.label.uiString = Requires Worktree Removal
localRepoStatusRequiresFbCheckout.label.uiString = Requires FB Fetch & Checkout

# DashboardView labels
dashboardView.labelFormat.selectionDescription = Actions (''{0}'' repository)
dashboardView.label.statusColumn = Status
dashboardView.label.baseBranchColumn = Base Branch
dashboardView.tooltip.baseBranchColumn = Base branch for the environment

# EnvironmentWorkflowView dashboard labels
environmentWorkflowView.label.dashboardViewNameColumn = Name
environmentWorkflowView.label.dashboardViewWorktreeLocationColumn = Worktree location

# FeatureBranchWorkflowView dashboard labels
featureBranchWorkflowView.label.dashboardViewTargetBranchColumn = Target Branch
featureBranchWorkflowView.tooltip.dashboardViewTargetBranchColumn = Target feature branch for the selection
featureBranchWorkflowView.label.dashboardViewWorktreeDefinitionColumn = Worktree definition
featureBranchWorkflowView.tooltip.dashboardViewWorktreeDefinitionColumn = Repository name and branch at the worktree
